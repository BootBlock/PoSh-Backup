# Config\User.psd1
# PowerShell Data File for PoSh Backup Script Configuration (User).
@{
    #region --- Logging Settings ---
    EnableFileLogging               = $false                          # $true to enable detailed text log files for each job run; $false to disable.
    #endregion

    #region --- Retry Mechanism Settings (Global Defaults) ---
    EnableRetries                   = $false                          # Global default. $true to enable the retry mechanism for failed 7-Zip operations (compression or archive testing).
                                                                      # Can be overridden per job or by the -EnableRetriesCLI command-line parameter.
    MaxRetryAttempts                = 3                               # Maximum number of retry attempts for a failed 7-Zip operation.
    RetryDelaySeconds               = 20                              # Delay in seconds between 7-Zip retry attempts.
    #endregion

    #region --- Destination Free Space Check Settings (Global Defaults) ---
    MinimumRequiredFreeSpaceGB      = 10                              # Minimum free Gigabytes (GB) required on the LOCAL STAGING destination drive before starting a backup.
                                                                      # Set to 0 or a negative value to disable this check.
    ExitOnLowSpaceIfBelowMinimum    = $true                           # $false (default) to only issue a warning and continue with the backup attempt.
                                                                      # $true to abort the job if free space is below the specified minimum.
    #endregion

    #region --- Checksum Settings (Global Defaults) ---
    DefaultGenerateArchiveChecksum      = $false                      # Global default. $true to generate a checksum file for the local archive.
    #endregion

    #region --- Backup Locations (Job Definitions) ---
    # Define individual backup jobs here. Each key in this hashtable represents a unique job name.
    BackupLocations                 = @{
        "Projects"  = @{
            Path                    = "P:\*"                          # Path(s) to back up. Can be a single string or an array of strings for multiple sources.
            Name                    = "Projects"                      # Base name for the archive file (date stamp and extension will be appended).
            DestinationDir          = "Y:\!Mirror\Backups\!Offsite"   # Specific directory for this job. If remote targets are specified, this acts as a LOCAL STAGING area.
                                                                      # If no remote targets, this is the FINAL BACKUP DESTINATION.

            ArchiveDateFormat          = "dd-MMM-yyyy"                # Custom date format for this job's archives. Overrides DefaultArchiveDateFormat.

            CompressionLevel         = "-mx=5"                        # 7-Zip -mx (compression level) switch. Examples: -mx=0 (Store), -mx=1 (Fastest), -mx=5 (Normal), -mx=7 (Maximum), -mx=9 (Ultra).

            LocalRetentionCount     = 1                               # Number of archive versions for this job to keep in 'DestinationDir'.
            LogRetentionCount       = 1                               # Job-specific log retention.
            DeleteToRecycleBin      = $false                          # For local retention in 'DestinationDir'.
            RetentionConfirmDelete  = $false                          # Job-specific override for local retention: auto-delete old local archives without prompting.

            # SevenZipIncludeListFile = "D:\MyIncludes.txt"           # Job-specific include list file.
            # SevenZipExcludeListFile = "D:\MyExcludes.txt"           # Job-specific exclude list file.
            ReportGeneratorType     = @("HTML")                       # Report type(s) for this job. Overrides global ReportGeneratorType.
            TreatSevenZipWarningsAsSuccess = $true                    # Optional per-job override. If $true, 7-Zip exit code 1 (Warning) is treated as success for this job.

            GenerateArchiveChecksum        = $false                   # Example: Enable checksum generation for this job
        }
    }
    #endregion
}
